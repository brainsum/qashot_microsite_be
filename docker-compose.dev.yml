version: "3.7"

services:
  web:
    build:
      context: ./web
      args:
        - "EXPOSED_PORT=${WEB_EXPOSED_PORT}"
    command: ["nodemon", "index.js"]
    environment:
    - "NODE_ENV=development"
    - "DEBUG='express:*'"
    - "PROJECT_ENVIRONMENT=development"
    volumes:
    - ./web:/home/node/app
    restart: "no"

  mailer:
    build:
      context: ./mailer
      args:
      - "EXPOSED_PORT=${WEB_EXPOSED_PORT}"
    command: ["nodemon", "index.js"]
    environment:
    - "NODE_ENV=development"
    - "DEBUG='express:*'"
    - "PROJECT_ENVIRONMENT=development"
    volumes:
    - ./mailer:/home/node/app
    restart: "no"

  postgres:
    restart: "no"

  adminer:
    image: adminer:4.6.3-standalone
    container_name: "${PROJECT_NAME}_adminer"
    restart: "no"
    environment:
    - "ADMINER_DB_USER=${POSTGRES_USER}"
    - "ADMINER_DEFAULT_SERVER=postgres"
    depends_on:
    - postgres
    networks:
    - backend
    labels:
    - "traefik.enable=true"
    - "traefik.backend=adminer"
    - "traefik.port=8080"
    - "traefik.frontend.rule=Host:adminer.${PROJECT_BASE_URL}"
    - "traefik.docker.network=backend"

  traefik:
    restart: "no"
    ports:
    - "8080:8080"
    labels:
    - "traefik.port=8080"
