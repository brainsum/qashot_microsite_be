version: "3.7"

services:
  web:
    image: brainsum/qashot_microsite_backend_web:v0.1.0
    container_name: "${PROJECT_NAME}_web"
    environment:
    - "JWT_SECRET_KEY=${JWT_SECRET_KEY}"
    - "EXPOSED_PORT=${WEB_EXPOSED_PORT}"
    - "WORKER_URL=${WORKER_URL}"
    - "ADMIN_USER=${WEB_ADMIN_USER}"
    - "ADMIN_PASS=${WEB_ADMIN_PASS}"
    - "DB_USER=${WEB_DB_USER}"
    - "DB_PASSWORD=${WEB_DB_PASSWORD}"
    - "PROJECT_ENVIRONMENT=production"
    - "RATE_LIMITER_PASSWORD=${RATE_LIMITER_PASSWORD}"
    restart: on-failure
    depends_on:
    - web_db
    - redis_rate_limiter
    networks:
    - frontend
    - backend
    - web_database
    - web_rate_limiter
    labels:
    - "traefik.enable=true"
    - "traefik.backend=web"
    - "traefik.frontend.rule=Host:${PROJECT_BASE_URL}"
    - "traefik.port=${WEB_EXPOSED_PORT}"
    - "traefik.docker.network=${PROJECT_NAME}_frontend"

  web_db:
    image: bitnami/postgresql:10.5.0
    container_name: "${PROJECT_NAME}_web_db"
    stop_grace_period: 10s
    restart: on-failure
    environment:
    - "POSTGRESQL_USERNAME=${WEB_DB_USER}"
    - "POSTGRESQL_PASSWORD=${WEB_DB_PASSWORD}"
    - "POSTGRESQL_DATABASE=web_db"
    volumes:
    - web_db_data:/bitnami
    networks:
    - web_database
    labels:
    - "traefik.enable=false"

  mailer:
    image: brainsum/qashot_microsite_backend_mailer:v0.1.0
    container_name: "${PROJECT_NAME}_mailer"
    environment:
    - "RESULTS_RABBITMQ_URL=${RESULTS_RABBITMQ_URL}"
    - "JWT_SECRET_KEY=${JWT_SECRET_KEY}"
    - "EXPOSED_PORT=${MAILER_EXPOSED_PORT}"
    - "DB_USER=${MAILER_DB_USER}"
    - "DB_PASSWORD=${MAILER_DB_PASSWORD}"
    - "MAILER_HOST=${MAILER_HOST}"
    - "MAILER_PORT=${MAILER_PORT}"
    - "MAILER_USER=${MAILER_USER}"
    - "MAILER_PASS=${MAILER_PASS}"
    - "PROJECT_ENVIRONMENT=production"
    restart: on-failure
    depends_on:
    - mailer_db
    networks:
    - backend
    - mailer_database
    labels:
    - "traefik.enable=false"
    - "traefik.backend=mailer"
    - "traefik.frontend.rule=Host:mailer.${PROJECT_BASE_URL}"
    - "traefik.port=${MAILER_EXPOSED_PORT}"
    - "traefik.docker.network=${PROJECT_NAME}_backend"

  mailer_db:
    image: bitnami/postgresql:10.5.0
    container_name: "${PROJECT_NAME}_mailer_db"
    stop_grace_period: 10s
    restart: on-failure
    environment:
    - "POSTGRESQL_USERNAME=${MAILER_DB_USER}"
    - "POSTGRESQL_PASSWORD=${MAILER_DB_PASSWORD}"
    - "POSTGRESQL_DATABASE=mailer_db"
    volumes:
    - mailer_db_data:/bitnami
    networks:
    - mailer_database
    labels:
    - "traefik.enable=false"

  # Note: Probably not needed, but:
  # https://github.com/bitnami/bitnami-docker-redis#setting-up-a-replication
  redis_rate_limiter:
    image: bitnami/redis:4.0.11
    container_name: "${PROJECT_NAME}_redis_rate_limiter"
    restart: on-failure
    environment:
    - "REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL"
    - "REDIS_PASSWORD=${RATE_LIMITER_PASSWORD}"
    networks:
    - web_rate_limiter
    volumes:
    - redis_rate_limiter_data:/bitnami/redis
    labels:
    - "traefik.enable=false"

  # Other.
  traefik:
    image: traefik:v1.6.6
    container_name: "${PROJECT_NAME}_traefik"
    restart: on-failure
    ports:
    - "${TRAEFIK_HOST_PORT}:80"
    networks:
    - frontend
    - backend
    - mailer_database
    - web_database
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./traefik/traefik.toml:/etc/traefik/traefik.toml
    labels:
    - "traefik.enable=false"

networks:
  frontend: {}
  backend: {}
  mailer_database: {}
  web_database: {}
  web_rate_limiter: {}

volumes:
  mailer_db_data: {}
  web_db_data: {}
  redis_rate_limiter_data: {}
